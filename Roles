variable "cluster_name" {
  description = "Name of the EKS cluster"
  type        = string
}

variable "enable_aws_ebs_csi_driver_addon" {
  description = "Enable EBS CSI Driver Addon"
  type        = bool
  default     = true
}

# IAM Role for EBS CSI Driver Pod Identity
resource "aws_iam_role" "ebs_pod_identity_role" {
  name = "${var.cluster_name}-ebs-pod-identity"

  assume_role_policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Effect = "Allow",
        Principal = {
          Federated = module.eks.oidc_provider_arn
        },
        Action = "sts:AssumeRoleWithWebIdentity",
        Condition = {
          StringEquals = {
            "${replace(module.eks.oidc_provider_url, "https://", "")}:sub" = "system:serviceaccount:kube-system:ebs-csi-controller-sa"
          }
        }
      }
    ]
  })
}

# Attach AWS managed policy for EBS CSI
resource "aws_iam_role_policy_attachment" "ebs_policy_attach" {
  role       = aws_iam_role.ebs_pod_identity_role.name
  policy_arn = "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy"
}

# EKS Pod Identity Association for EBS CSI Driver
resource "aws_eks_pod_identity_association" "ebs" {
  count           = var.enable_aws_ebs_csi_driver_addon ? 1 : 0
  cluster_name    = var.cluster_name
  namespace       = "kube-system"
  service_account = "ebs-csi-controller-sa"
  role_arn        = aws_iam_role.ebs_pod_identity_role.arn

  depends_on = [module.eks]
}



variable "cluster_name" {
  description = "EKS cluster name"
  type        = string
}

variable "enable_aws_efs_csi_driver_addon" {
  description = "Enable EFS CSI Driver addon"
  type        = bool
  default     = true
}

# IAM Role for EFS CSI Driver
resource "aws_iam_role" "efs_pod_identity_role" {
  name = "${var.cluster_name}-efs-pod-identity"

  assume_role_policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Effect = "Allow",
        Principal = {
          Federated = module.eks.oidc_provider_arn
        },
        Action = "sts:AssumeRoleWithWebIdentity",
        Condition = {
          StringEquals = {
            "${replace(module.eks.oidc_provider_url, "https://", "")}:sub" = "system:serviceaccount:kube-system:efs-csi-controller-sa"
          }
        }
      }
    ]
  })
}

# Attach AWS-managed EFS CSI policy
resource "aws_iam_role_policy_attachment" "efs_policy_attach" {
  role       = aws_iam_role.efs_pod_identity_role.name
  policy_arn = "arn:aws:iam::aws:policy/service-role/AmazonEFSCSIDriverPolicy"
}

# EKS Pod Identity Association for EFS CSI Driver
resource "aws_eks_pod_identity_association" "efs" {
  count           = var.enable_aws_efs_csi_driver_addon ? 1 : 0
  cluster_name    = var.cluster_name
  namespace       = "kube-system"
  service_account = "efs-csi-controller-sa"
  role_arn        = aws_iam_role.efs_pod_identity_role.arn

  depends_on = [module.eks]
}



variable "cluster_name" {
  description = "EKS cluster name"
  type        = string
}

variable "enable_vpc_cni_addon" {
  description = "Enable VPC CNI pod identity"
  type        = bool
  default     = true
}

# IAM Role for VPC CNI Pod Identity
resource "aws_iam_role" "vpc_cni_pod_identity_role" {
  name = "${var.cluster_name}-vpc-cni-pod-identity"

  assume_role_policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Effect = "Allow",
        Principal = {
          Federated = module.eks.oidc_provider_arn
        },
        Action = "sts:AssumeRoleWithWebIdentity",
        Condition = {
          StringEquals = {
            "${replace(module.eks.oidc_provider_url, "https://", "")}:sub" = "system:serviceaccount:kube-system:aws-node"
          }
        }
      }
    ]
  })
}

# Attach AmazonEKS_CNI_Policy to the role
resource "aws_iam_role_policy_attachment" "vpc_cni_policy_attach" {
  role       = aws_iam_role.vpc_cni_pod_identity_role.name
  policy_arn = "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
}

# Pod Identity Association for aws-node (VPC CNI)
resource "aws_eks_pod_identity_association" "vpc_cni" {
  count           = var.enable_vpc_cni_addon ? 1 : 0
  cluster_name    = var.cluster_name
  namespace       = "kube-system"
  service_account = "aws-node"
  role_arn        = aws_iam_role.vpc_cni_pod_identity_role.arn

  depends_on = [module.eks]
}
