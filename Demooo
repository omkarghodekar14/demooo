resource "aws_iam_role" "ebs_pod_identity_role" {
  name = "${var.cluster_name}-ebs-pod-identity"

  assume_role_policy = jsonencode({
    Version = "2012-10-17",
    Statement = [{
      Effect = "Allow",
      Principal = {
        Service = "pods.eks.amazonaws.com"
      },
      Action = "sts:AssumeRole"
    }]
  })
}

resource "aws_iam_role_policy_attachment" "ebs_policy_attach" {
  role       = aws_iam_role.ebs_pod_identity_role.name
  policy_arn = "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy"
}

resource "aws_iam_role" "efs_pod_identity_role" {
  name = "${var.cluster_name}-efs-pod-identity"

  assume_role_policy = jsonencode({
    Version = "2012-10-17",
    Statement = [{
      Effect = "Allow",
      Principal = {
        Service = "pods.eks.amazonaws.com"
      },
      Action = "sts:AssumeRole"
    }]
  })
}

resource "aws_iam_role_policy_attachment" "efs_policy_attach" {
  role       = aws_iam_role.efs_pod_identity_role.name
  policy_arn = "arn:aws:iam::aws:policy/service-role/AmazonEFSCSIDriverPolicy"
}

resource "aws_eks_pod_identity_association" "ebs" {
  cluster_name = var.cluster_name
  namespace    = "kube-system"
  service_account = "ebs-csi-controller-sa"
  role_arn     = aws_iam_role.ebs_pod_identity_role.arn
}

resource "aws_eks_pod_identity_association" "efs" {
  cluster_name = var.cluster_name
  namespace    = "kube-system"
  service_account = "efs-csi-controller-sa"
  role_arn     = aws_iam_role.efs_pod_identity_role.arn
}
