# -------------------------------
# IAM Role for Cluster Autoscaler
# -------------------------------
resource "aws_iam_role" "cluster_autoscaler" {
  name = "AmazonEKSClusterAutoscalerRole"

  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [{
      Effect = "Allow"
      Principal = {
        Federated = module.eks.oidc_provider_arn
      }
      Action = "sts:AssumeRoleWithWebIdentity"
      Condition = {
        StringEquals = {
          "${replace(module.eks.oidc_provider_url, "https://", "")}:sub" = "system:serviceaccount:kube-system:cluster-autoscaler"
        }
      }
    }]
  })
}

# -------------------------------
# IAM Policy for Cluster Autoscaler
# -------------------------------
resource "aws_iam_policy" "cluster_autoscaler" {
  name        = "AmazonEKSClusterAutoscalerPolicy"
  description = "Permissions for EKS Cluster Autoscaler"

  policy = jsonencode({
    Version = "2012-10-17"
    Statement = [{
      Effect = "Allow"
      Action = [
        "autoscaling:DescribeAutoScalingGroups",
        "autoscaling:DescribeAutoScalingInstances",
        "autoscaling:DescribeLaunchConfigurations",
        "autoscaling:DescribeTags",
        "autoscaling:SetDesiredCapacity",
        "autoscaling:TerminateInstanceInAutoScalingGroup",
        "ec2:DescribeLaunchTemplateVersions"
      ]
      Resource = "*"
    }]
  })
}

resource "aws_iam_role_policy_attachment" "cluster_autoscaler_attach" {
  role       = aws_iam_role.cluster_autoscaler.name
  policy_arn = aws_iam_policy.cluster_autoscaler.arn
}

# -------------------------------
# EKS Pod Identity Association (IRSA)
# -------------------------------
resource "aws_eks_pod_identity_association" "cluster_autoscaler_irsa" {
  cluster_name    = module.eks.cluster_name
  namespace       = "kube-system"
  service_account = "cluster-autoscaler"
  role_arn        = aws_iam_role.cluster_autoscaler.arn
}

# -------------------------------
# Cluster Autoscaler Addon
# -------------------------------
module "eks_blueprints_addons" {
  source  = "aws-ia/eks-blueprints-addons/aws"
  version = "~> 1.17.0"

  cluster_name      = module.eks.cluster_name
  cluster_endpoint  = module.eks.cluster_endpoint
  cluster_version   = module.eks.cluster_version
  oidc_provider_arn = module.eks.oidc_provider_arn

  enable_cluster_autoscaler = true

  cluster_autoscaler = {
    namespace = "kube-system"
    service_account = {
      create = false
      name   = "cluster-autoscaler"
      annotations = {
        "eks.amazonaws.com/role-arn" = aws_iam_role.cluster_autoscaler.arn
      }
    }

    values = [
      yamlencode({
        autoDiscovery = {
          clusterName = module.eks.cluster_name
        }
        awsRegion = var.region
        rbac = {
          serviceAccount = {
            name   = "cluster-autoscaler"
            create = false
          }
        }
        extraArgs = {
          skip-nodes-with-local-storage = "false"
          skip-nodes-with-system-pods   = "false"
        }
        resources = {
          limits = {
            cpu    = "100m"
            memory = "600Mi"
          }
          requests = {
            cpu    = "100m"
            memory = "300Mi"
          }
        }
      })
    ]
  }
}
